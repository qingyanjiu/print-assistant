spring:
  application:
    name: print-assistant
  thymeleaf:
    cache: false
    check-template: true
#  cache:
#    cache-names:
#      - cache
#    redis:
#      time-to-live: 60000

  redis:
    host: 106.75.14.33
    database: 0
    port: 36379
    timeout: 120000
    lettuce:
      pool:
        max-active: 10 #连接池最大连接数
        max-wait: -1 #连接池最大阻塞时间
        max-idle: 5 #连接池中最大空闲连接
        min-idle: 1 #连接池中最小空闲连接
  kafka:
    ###########【Kafka集群】###########
    bootstrap-servers:
      - 106.75.14.33:9092
    ###########【初始化生产者配置】###########
    # 重试次数
    producer:
      retries: 0
      # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      acks: 1
      # 批量大小
      batch-size: 16384
      # 提交延时
      properties:
        linger:
          ms: 0
      # 当生产端积累的消息达到batch-size或接收到消息linger.ms后,生产者就会将消息提交给kafka
      # linger.ms为0表示每接收到一条消息就提交给kafka,这时候batch-size其实就没用了

      # 生产端缓冲区大小
      buffer-memory: 33554432
      # Kafka提供的序列化和反序列化类
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 自定义分区器
#        partitioner:
#          class: com.felix.kafka.producer.CustomizePartitioner

    ###########【初始化消费者配置】###########
    # 默认的消费组ID
    consumer:
      properties:
        group:
          id: defaultConsumerGroup
      # 消费会话超时时间(超过这个时间consumer没有发送心跳,就会触发rebalance操作)
      session:
        timeout:
          ms: 120000
      request:
        timeout:
          ms: 120000
      # 是否自动提交offset
      enable-auto-commit: true
      # 提交offset延时(接收到消息后多久提交offset)
      auto-commit-interval:
        ms: 1000
      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
      # earliest:重置为分区中最小的offset;
      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
      # none:只要有一个分区不存在已提交的offset,就抛出异常;
      auto-offset-reset: latest
      # Kafka提供的序列化和反序列化类
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
       # 批量消费每次最多消费多少条消息
#      max-poll-records: 50
     # 设置批量消费
#    listener:
#      type: batch



  datasource:
    username: root
    password: 19831226lc
    url: jdbc:mysql://pass.moku.site:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
    driver-class-name: com.mysql.cj.jdbc.Driver

mybatis:
  mapper-locations: classpath:mapping/*.xml
  type-aliases-package: site.moku.printassistant.dao

server:
  port: 8000
  tomcat:
    max-http-post-size: -1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain


print:
  history:
    expire:
      days: 7



